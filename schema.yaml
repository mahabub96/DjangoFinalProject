openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /auction-items/api/auction-items/:
    get:
      operationId: auction_items_api_auction_items_list
      tags:
      - auction-items
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuctionItem'
          description: ''
  /auction-items/api/auction-items/{id}/:
    get:
      operationId: auction_items_api_auction_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auction-items
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuctionItem'
          description: ''
  /auction-items/api/auction-items/{id}/delete/:
    delete:
      operationId: auction_items_api_auction_items_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auction-items
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /auction-items/api/auction-items/{id}/edit/:
    put:
      operationId: auction_items_api_auction_items_edit_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auction-items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuctionItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuctionItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuctionItem'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuctionItem'
          description: ''
    patch:
      operationId: auction_items_api_auction_items_edit_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auction-items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuctionItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuctionItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuctionItem'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuctionItem'
          description: ''
  /auction-items/api/auction-items/create/:
    post:
      operationId: auction_items_api_auction_items_create_create
      tags:
      - auction-items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuctionItemCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuctionItemCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuctionItemCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuctionItemCreate'
          description: ''
  /auction-items/api/bids/:
    post:
      operationId: auction_items_api_bids_create
      tags:
      - auction-items
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /bids/api/bids/user/{user_id}/:
    get:
      operationId: bids_api_bids_user_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - bids
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /categories/api/categories/:
    get:
      operationId: categories_api_categories_list
      tags:
      - categories
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /categories/api/categories/{category_id}/items/:
    get:
      operationId: categories_api_categories_items_retrieve
      parameters:
      - in: path
        name: category_id
        schema:
          type: integer
        required: true
      tags:
      - categories
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /files/api/files/:
    post:
      operationId: files_api_files_create
      tags:
      - files
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /files/api/files/{file_id}/:
    delete:
      operationId: files_api_files_destroy
      parameters:
      - in: path
        name: file_id
        schema:
          type: integer
        required: true
      tags:
      - files
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /files/api/files/auction-item/{item_id}/:
    get:
      operationId: files_api_files_auction_item_retrieve
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
        required: true
      tags:
      - files
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /logs/api/logs/user/{user_id}/:
    get:
      operationId: logs_api_logs_user_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - logs
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /notifications/api/notifications/{notification_id}/:
    get:
      operationId: notifications_api_notifications_retrieve
      description: Verify that the current user is authenticated.
      parameters:
      - in: path
        name: notification_id
        schema:
          type: integer
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: notifications_api_notifications_partial_update
      description: Verify that the current user is authenticated.
      parameters:
      - in: path
        name: notification_id
        schema:
          type: integer
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /notifications/api/notifications/user/{user_id}/:
    get:
      operationId: notifications_api_notifications_user_retrieve
      description: Verify that the current user is authenticated.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: notifications_api_notifications_user_partial_update
      description: Verify that the current user is authenticated.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /payments/api/payments/:
    post:
      operationId: payments_api_payments_create
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /payments/api/payments/status/{payment_id}/:
    get:
      operationId: payments_api_payments_status_retrieve
      parameters:
      - in: path
        name: payment_id
        schema:
          type: integer
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /payments/api/payments/user/{user_id}/:
    get:
      operationId: payments_api_payments_user_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /payments/payments/:
    get:
      operationId: payments_payments_retrieve
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /payments/payments/history/:
    get:
      operationId: payments_payments_history_retrieve
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /transactions/api/transactions/user/{user_id}/:
    get:
      operationId: transactions_api_transactions_user_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - transactions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /users/api/auth/change-password/:
    patch:
      operationId: users_api_auth_change_password_partial_update
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /users/api/auth/login/:
    post:
      operationId: users_api_auth_login_create
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /users/api/auth/logout/:
    post:
      operationId: users_api_auth_logout_create
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /users/api/auth/password-reset/:
    post:
      operationId: users_api_auth_password_reset_create
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /users/api/auth/password-reset-confirm/:
    post:
      operationId: users_api_auth_password_reset_confirm_create
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /users/api/auth/register/:
    post:
      operationId: users_api_auth_register_create
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /users/api/auth/token/:
    post:
      operationId: users_api_auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - users
      responses:
        '200':
          description: No response body
  /users/api/auth/token/refresh/:
    post:
      operationId: users_api_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /users/api/users/{user_id}/:
    get:
      operationId: users_api_users_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: users_api_users_partial_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    AuctionItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        starting_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        current_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        end_date:
          type: string
          format: date-time
        is_sold:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        category:
          type: integer
        user:
          type: integer
      required:
      - category
      - created_at
      - current_price
      - description
      - end_date
      - id
      - starting_price
      - title
      - user
    AuctionItemCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        starting_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        end_date:
          type: string
          format: date-time
        category:
          type: integer
      required:
      - category
      - description
      - end_date
      - starting_price
      - title
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
      required:
      - description
      - id
      - name
    PatchedAuctionItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        starting_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        current_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        end_date:
          type: string
          format: date-time
        is_sold:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        category:
          type: integer
        user:
          type: integer
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
